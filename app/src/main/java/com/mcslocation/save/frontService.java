package com.mcslocation.save;import android.app.AlarmManager;import android.app.Notification;import android.app.NotificationManager;import android.app.PendingIntent;import android.app.Service;import android.content.Context;import android.content.Intent;import android.os.Binder;import android.os.IBinder;import android.os.SystemClock;import android.util.Log;import com.mcslocation.R;import com.mcslocation.activity.MainActivity;public class frontService extends Service {	private static final String TAG = frontService.class.getSimpleName();	private MyBinder mBinder = new MyBinder();	@Override	public IBinder onBind(Intent intent) {		// TODO Auto-generated method stub		return mBinder;	}	@Override	public void onCreate() {		// TODO Auto-generated method stub		super.onCreate();		Log.i(TAG, "onCreate");		frontService();	}	@Override	public void onDestroy() {		// TODO Auto-generated method stub		super.onDestroy();		Log.i(TAG, "onDestroy");	}	@Override	public int onStartCommand(Intent intent, int flags, int startId) {		// TODO Auto-generated method stub		Log.i(TAG, "onStartCommand");		return super.onStartCommand(intent, flags, startId);	}	class MyBinder extends Binder {		public void toDo() {			Log.i(TAG, "toDo");		}	}	/**	 * 前台服务	 */	private void frontService() {		//获取AlarmManager系统服务  		AlarmManager manager = (AlarmManager) this.getSystemService(Context.ALARM_SERVICE);		/**		*创建Notification		*		*/		NotificationManager notimanager = (NotificationManager) getSystemService(NOTIFICATION_SERVICE);		Notification.Builder builder = new Notification.Builder(this);		builder.setSmallIcon(R.mipmap.ic_launcher);		builder.setContentTitle("MCS实验系统");		builder.setContentText("正在为您服务");//		Intent intent = new Intent(this, MainActivity.class);//		PendingIntent pendingIntent = PendingIntent.getActivity(this, 0, intent, PendingIntent.FLAG_UPDATE_CURRENT);//		builder.setContentIntent(pendingIntent);//设置了此项内容之后，点击通知栏的这个消息，就跳转到MainActivity//		Notification notification = builder.build();//		//触发服务的起始时间//        long triggerAtTime = SystemClock.elapsedRealtime();//		//600 * 1000 10分钟打开一次Location_Activity//        manager.setRepeating(AlarmManager.ELAPSED_REALTIME, triggerAtTime,  10*60* 1000, pendingIntent);//		//启动到前台//        startForeground(1, notification);		startForeground(1,builder.build());	}		/**	 * Polling thread	 */	int count = 0;	class PollingThread extends Thread {		@Override		public void run() {			System.out.println("Polling...");			count ++;			if (count % 5 == 0) {				frontService();				System.out.println("New message!");			}		}	}}